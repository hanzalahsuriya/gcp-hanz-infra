name: Terraform Deployment

on:
  push:
    branches:
      - main  # Runs only on main branch

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # ✅ Required for Workload Identity Federation
      contents: read    # ✅ Required to read repo contents
    strategy:
      matrix:
        environment: [dev]  # Run for all environments

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Read Terraform Variables
        run: |
          echo "GCP_PROJECT_ID=$(awk -F' *= *' '$1=="project_id"{print $2}' terraform/envs/${{ matrix.environment }}.tfvars | tr -d '"')" >> $GITHUB_ENV
          echo "GCP_PROJECT_NUMBER=$(awk -F' *= *' '$1=="project_number"{print $2}' terraform/envs/${{ matrix.environment }}.tfvars | tr -d '"')" >> $GITHUB_ENV


      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      #Use the Terraform Bootstrap Service Account (One-Time Authentication) 
      - name: Authenticate to GCP (Bootstrap) 
        uses: google-github-actions/auth@v1 
        with:
          credentials_json: ${{ secrets.GCP_TERRAFORM_BOOTSTRAP_KEY }}

    
    #   - name: Authenticate to GCP (Using TF Vars)
    #     uses: google-github-actions/auth@v1
    #     with:
    #       workload_identity_provider: "projects/${{ env.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github/providers/github-provider"
    #       service_account: "github-actions@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com"


      - name: Initialize Terraform
        run: terraform init -upgrade
        working-directory: terraform

      - name: Apply Terraform for ${{ matrix.environment }}
        run: terraform apply -auto-approve -var-file=envs/${{ matrix.environment }}.tfvars
        working-directory: terraform
